---
- name: Initialize the Kubernetes cluster using kubeadm
  shell: 'kubeadm init --cri-socket /run/containerd/containerd.sock --apiserver-advertise-address={{ ansible_host }} --apiserver-cert-extra-sans={{ ansible_host }} --node-name k8s-master --pod-network-cidr={{ pod_network_cidr }}'

- name: Setup kubeconfig for vagrant user
  command: "{{ item }}"
  args:
    warn: false 
  # with_items:
  #   - mkdir -p $HOME/.kube
  #   - cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  #   - chown vagrant:vagrant $HOME/.kube/config

  with_items:
    - mkdir -p {{ kube_home_dir }}/.kube
    - cp -i /etc/kubernetes/admin.conf {{ kube_home_dir }}/.kube/config
    - chown {{kube_user}}:{{kube_folder}} {{ kube_home_dir }}/.kube/config

- name: Install weave pod network
  become: false
  shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

- name: Generate join command
  command: kubeadm token create --print-join-command
  register: join_command

# - name: Copy join command to local file
#   local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command.sh"

# - name: Copy join command to local file
#   local_action:
#     copy:
#       content: "{{ join_command.stdout_lines[0] }}"
#     dest: "./join-command.sh"


- name: Create the mongodb startup file
  shell: "{{ join_command.stdout_lines[0] }}"
  delegate_to: '{{ item }}'
  with_items: "{{groups.kube-nodes}}"

