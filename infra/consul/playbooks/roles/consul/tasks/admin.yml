- name: Keygen
  shell: consul keygen
  register: consul_key

- name: Create keygen file
  copy:
    content: "{{ consul_key }}"
    dest: /etc/consul.d/keyfile

- name: get CA
  stat:
    path: './consul-agent-ca.pem'
  register: p

- name: Keygen
  shell: consul tls ca create
  when: p.stat.exists == False

- name: Copy ca to /etc/consul.d
  copy:
    remote_src: True
    src: '{{ item }}'
    dest: /etc/consul.d/{{item}}
  with_items:
    - consul-agent-ca.pem
    - consul-agent-ca-key.pem
  when: p.stat.exists == False

- name: Copy Remote-To-Remote
  synchronize:
    src: /etc/consul.d/{{item[1]}}
    dest: /etc/consul.d/{{item[1]}}
    mode: pull
    become: false
    # owner: '{{ consul_user }}'
    # group: '{{ consul_group }}'
  delegate_to: '{{ item[0] }}'
  with_nested:
    - "{{ groups['consulnodes'] }}"
    - [consul-agent-ca.pem, consul-agent-ca-key.pem]
  # when: p.stat.exists == False



# - name: Create server certificates
#   shell: "consul tls cert create -server -dc {{ hostvars[item]['consul_dc_name'] }}"
#   with_items: "{{ groups['consul_agents'] }}"

# - name: Create client certificates
#   shell: "consul tls cert create -client -dc {{ hostvars[item]['consul_dc_name'] }}"
#   with_items: "{{ groups['consul_agents'] }}"


# - name: Find /var/log files equal or greater than 10 megabytes ending with .old or .log.gz
#   find:
#     paths:
#       - ./
#     patterns: '*.pem'
#     register: certificates


# - name: Copy ca cert
#   shell: scp {{ item }} {{ consul_user }}@{{ hostvars[item[1]]['ansible_host'] }}:/etc/consul.d/
#   when:
#     - item[0] | regex_search('^{{ hostvars[item[1]]['consul_dc_name'] }}')
#   with_nested:
#     - "{{ certificates }}"
#     - "{{ groups['consul_agents'] }}"


# - name: Copy ca cert
#   shell: scp consul-agent-ca.pem {{ consul_user }}@{{ hostvars[item]['ansible_host'] }}:/etc/consul.d/
#   with_items:
#     - "{{ groups['consul_agents'] }}"

# - name: Copy ca cert
#   shell: scp consul-agent-ca.pem <dc-name>-<server/client>-consul-<cert-number>.pem <dc-name>-<server/client>-consul-<cert-number>-key.pem <USER>@<PUBLIC_IP>:/etc/consul.d/
#   with_items:
#     - "{{ groups['consul_agents'] }}"


# - name: "Copy a local file to remote device"
#   ce_file_copy:
#     local_file: /usr/vrpcfg.cfg
#     remote_file: /vrpcfg.cfg
#     file_system: 'flash:'
#     provider: "{{ cli }}"